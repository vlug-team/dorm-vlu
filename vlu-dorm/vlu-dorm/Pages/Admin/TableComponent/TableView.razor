@inject RoomServices RoomServices
@inject StudentServices StudentServices
@using vlu_dorm.Pages.Admin.Modals
<Table DataSource="Data" Style="margin:2em;" @bind-PageSize="pageSize">
    <Selection Key="@(context.Id.ToString())" />
    <Column Title="Ngày Đăng kí" @bind-Field="@context.CreateAt" Format="dd-MM-yyyy" Sortable />
    <Column Title="MSSV" @bind-Field="@context.StudentCode" Sortable />
    <Column Title="Họ và tên" @bind-Field="@context.FullName" Sortable />
    <Column Title="Khóa học" @bind-Field="@context.Course" Sortable />
    <Column Title="Email" @bind-Field="@context.Email" Sortable />
    <Column Title="Khoa" @bind-Field="@context.Department" Sortable />
    <Column Title="SĐT" @bind-Field="@context.PhoneNumeber" Sortable />
    <Column Title="Giới tính" @bind-Field="@context.Gender" Sortable />
    <ActionColumn Title="Action">
        <Space>
            <SpaceItem>
                <Button Type="@ButtonType.Primary" Color="Color.Green5" OnClick="()=>OnShow(context.Id)">Edit</Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>
<Modal Visible="isShow" Title="Chỉnh sửa sinh viên" Width="900" OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    <Form Model="Student"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="8"
          WrapperColSpan="16">
        @if (isSucess)
        {
            <Row Justify="center" Style="margin-top:1em">
                <FormItem>
                    <Alert Message="@notice" Type="@type" CloseText="x" Closable Style="width:500px" />
                </FormItem>
            </Row>
        }
        else
        {
            <FormItem></FormItem>
        }
        <FormItem>
            <Row>
                <Col Span="7">
                <Input @bind-Value="context.FullName" Placeholder="Họ và tên"></Input>
                </Col>
                <br />
                <Col Offset="2">
                <RadioGroup @bind-Value="context.Gender">
                    <Radio Value="@("Nam")">Nam</Radio>
                    <Radio Value="@("Nữ")">Nữ</Radio>
                </RadioGroup>
                </Col>
            </Row>
        </FormItem>
        <FormItem>
            <Row>
                <Col Span="7">
                <Input @bind-Value="context.StudentCode" Placeholder="Mã số sinh viên"></Input>
                </Col>
                <Col Span="4" Offset="2">
                <Select @bind-Value="@context.Course" TItem="string" TItemValue="string" Placeholder="Khóa học">
                    <SelectOptions>
                            @foreach (var item in _course)
                            {
                            <SelectOption TItemValue="string" TItem="string" Value=@item Label=@item />
                            }
                    </SelectOptions>
                </Select>
                </Col>
            </Row>
        </FormItem>
        <FormItem>
            <Row>
                <Col Span="7">
                <Input @bind-Value="context.Email" Placeholder="Email trường cấp" Type="email"></Input>
                </Col>
                <Col Offset="2">
                <AutoComplete @bind-Value="context.Department" Options="@_department.Distinct()" Placeholder="Khoa" />
                </Col>
            </Row>
        </FormItem>
        <FormItem>
            <Row>
                <Col Span="7">
                <Input @bind-Value="context.PhoneNumeber" Placeholder="Số điện thoại"></Input>
                </Col>
                <Col Offset="2">
                <DatePicker @bind-Value="context.BirthDay" Format="dd/MM/yyyy" />
                </Col>
            </Row>
        </FormItem>
        <FormItem>
            <Row>
                <Col Span="15">
                <Input @bind-Value="context.PermanentAddress" Placeholder="Địa chỉ: 69 Đặng thùy trâm,..."></Input>
                </Col>
            </Row>
        </FormItem>
        <FormItem WrapperColOffset="13" WrapperColSpan="4">
            <Button Type="@ButtonType.Primary" HtmlType="submit">
                Sửa
            </Button>
        </FormItem>

    </Form>
</Modal>
@code {
    [Parameter] public Students[] Data { get; set; }
    Students Student;
    List<string> _course = new() { "K23", "K24", "K25", "K26", "K27", "K28" };
    List<string> _department = new() { "Công nghệ thông tin", "Khoa học dữ liệu", "Công nghệ kỹ thuật ô tô", "Thiết kế đồ họa", "Thanh nhạc", "Piano", "Thiết kế công nghiệp", "Thiết kế thời trang", "Diễn viên kịch, điện ảnh - truyền hình", "Đạo diễn điện ảnh, truyền hình", "Ngôn ngữ Anh", "Ngôn ngữ Trung Quốc", "Văn học", "Tâm lý học", "Đông phương học", "Quan hệ công chúng", "Quản trị kinh doanh", "Marketing", "Bất động sản", "Kinh doanh thương mại", "Tài chính - Ngân hàng", "Kế toán", "Luật kinh tế", "Luật", "Công nghệ sinh học", "Công nghệ sinh học y dược", "Quản trị công nghệ sinh học", "Kỹ thuật phần mềm", "Công nghệ kỹ thuật điện, điện tử", "Công nghệ kỹ thuật môi trường", "Logistics và quản lý chuỗi cung ứng", "Quản trị môi trường doanh nghiệp", "Kỹ thuật cơ điện tử", "Kỹ thuật nhiệt", "Công nghệ thực phẩm", "Kiến trúc", "Thiết kế nội thất", "Kỹ thuật xây dựng", "Kỹ thuật xây dựng công trình giao thông", "Quản lý xây dựng", "Thiết kế xanh", "Nông nghiệp công nghệ cao", "Dược học", "Điều dưỡng", "Răng - Hàm - Mặt", "Kỹ thuật xét nghiệm y học", "Công tác xã hội", "Quản trị dịch vụ du lịch và lữ hành", "Quản trị khách sạn", "Quản trị nhà hàng và dịch vụ ăn uống" };

    private int pageSize = 10;
    bool isShow = false;
    bool isSucess = false;
    string notice;
    string type;
    protected override void OnParametersSet()
    {
        if (Data != null)
        {
            Data = Data.Where(x => x.IsConfirm == true).ToArray();
        }
    }
    void OnShow(int id)
    {
        isShow = true;
        Student = StudentServices.GetStudentById(id);
    }
    private void HandleOk(MouseEventArgs e)
    {
        if (isSucess == false)
        {
            isSucess = true;
            notice = "Sửa thành công";
            type = "success";
            StudentServices.Update(Student);
        }
        else
        {
            notice = "Sửa thành công";
            type = "success";
            StudentServices.Update(Student);
        }
        Data = Data.Where(c => c.IsConfirm == true).ToArray();
        isShow = false;

    }
    private void HandleCancel(MouseEventArgs e)
    {
        Data = Data.Where(c => c.IsConfirm == true).ToArray();
        isShow = false;
    }
    private async Task OnFinish(EditContext editContext)
    {
        if (isSucess == false)
        {
            isSucess = true;
            notice = "Sửa thành công";
            type = "success";
            await StudentServices.UpdateAsync(Student);
        }
        else
        {
            notice = "Sửa thành công";
            type = "success";
            await StudentServices.UpdateAsync(Student);
        }
        Data = Data.Where(c => c.IsConfirm == true).ToArray();

    }
    private void OnFinishFailed(EditContext editContext)
    {
        isSucess = true;
        notice = "Đăng kí không thành công";
        type = "error";
        Data = Data.Where(c => c.IsConfirm == true).ToArray();

    }
}