@inject RoomServices RoomServices
@inject StudentServices StudentServices
@inject ModalService ModalService
@using System.Globalization
@using vlu_dorm.Pages.Admin.Modals


<Table DataSource="Data.Where(c => c.IsConfirm == true).ToArray()" Style="margin:2em;" @bind-PageSize="pageSize">
    <Selection Key="@(context.Id.ToString())" />
    <Column Title="MSSV" @bind-Field="@context.StudentCode" Sortable />
    <Column Title="Họ và tên" @bind-Field="@context.FullName" Sortable />
    <Column Title="Khóa học" @bind-Field="@context.Course" Sortable />
    <Column Title="Giới tính" @bind-Field="@context.Gender" Sortable />
    <Column Title="Phòng" Field="@(context?.RoomNavgation?.RoomNumber == null? "Chưa": context.RoomNavgation.RoomNumber)" Sortable />
    <Column Title="Tiền Phải" Field="@(((context.RoomNavgation?.ElectricPrice * context.RoomNavgation?.BillNavgation?.ElectricNumber) + (context.RoomNavgation?.WaterPrice * context.RoomNavgation?.BillNavgation?.WaterNumber) + context.RoomNavgation?.RoomPrice) / context.RoomNavgation?.Capacity)" Format=""/>
    <ActionColumn Title="Action">
        <Space>
            <SpaceItem>
                @if (context.IsActive != true)
                {
                    <a href="Identity/Account/Register">
                        <Button Type="@ButtonType.Primary" Color="Color.Blue5">Đăng kí</Button>
                    </a>
                }
                @if (context.RoomNavgation == null)
                {
                    <Button Type="@ButtonType.Primary" Color="Color.Green5" OnClick="()=>OnShowRoom(context.Id)">Chọn Phòng</Button>
                }
                <Button Type="@ButtonType.Primary" Color="Color.Yellow5" OnClick="()=>OnShow(context.Id)">Edit</Button>
                <Button Type="@ButtonType.Primary" Color="Color.Red5" OnClick="()=>Delete(context.Id)">Delete</Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>
<Modal Visible="isShow" Title="Chỉnh sửa sinh viên" Width="900" OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    @content
</Modal>
<Modal Visible="isRoom" Title="Chọn phòng sinh viên" OnOk="@HandleOk"
       OnCancel="@HandleCancel">
    @content
</Modal>
@code {
    [Parameter] public Students[] Data { get; set; }

    private Students Student;
    private RenderFragment content;
    private CultureInfo cul = CultureInfo.GetCultureInfo("vi-VN");

    private List<string> _course = new() { "K23", "K24", "K25", "K26", "K27", "K28" };
    private List<string> _department = new() { "Công nghệ thông tin", "Khoa học dữ liệu", "Công nghệ kỹ thuật ô tô", "Thiết kế đồ họa", "Thanh nhạc", "Piano", "Thiết kế công nghiệp", "Thiết kế thời trang", "Diễn viên kịch, điện ảnh - truyền hình", "Đạo diễn điện ảnh, truyền hình", "Ngôn ngữ Anh", "Ngôn ngữ Trung Quốc", "Văn học", "Tâm lý học", "Đông phương học", "Quan hệ công chúng", "Quản trị kinh doanh", "Marketing", "Bất động sản", "Kinh doanh thương mại", "Tài chính - Ngân hàng", "Kế toán", "Luật kinh tế", "Luật", "Công nghệ sinh học", "Công nghệ sinh học y dược", "Quản trị công nghệ sinh học", "Kỹ thuật phần mềm", "Công nghệ kỹ thuật điện, điện tử", "Công nghệ kỹ thuật môi trường", "Logistics và quản lý chuỗi cung ứng", "Quản trị môi trường doanh nghiệp", "Kỹ thuật cơ điện tử", "Kỹ thuật nhiệt", "Công nghệ thực phẩm", "Kiến trúc", "Thiết kế nội thất", "Kỹ thuật xây dựng", "Kỹ thuật xây dựng công trình giao thông", "Quản lý xây dựng", "Thiết kế xanh", "Nông nghiệp công nghệ cao", "Dược học", "Điều dưỡng", "Răng - Hàm - Mặt", "Kỹ thuật xét nghiệm y học", "Công tác xã hội", "Quản trị dịch vụ du lịch và lữ hành", "Quản trị khách sạn", "Quản trị nhà hàng và dịch vụ ăn uống" };

    private double total;
    private int pageSize = 10;
    private bool isShow = false;
    private bool isRoom = false;
    private bool isSucess = false;
    private string notice;
    private string type;

    protected override void OnInitialized()
    {
        Data = StudentServices.GetAll().Where(c => c.IsConfirm == true).ToArray();
    }
    void OnShow(int id)
    {
        isShow = true;
        content =
    @<EditStudent Id="id" />;

        Data = StudentServices.GetAll().Where(c => c.IsConfirm == true).ToArray();
    }
    void OnShowRoom(int id)
    {
        isRoom = true;

        content =
    @<AddStudentToRoom Id="id" />;
        Data = StudentServices.GetAll().Where(c => c.IsConfirm == true).ToArray();

    }

    private void HandleOk(MouseEventArgs e)
    {
        isRoom = false;
        isShow = false;
        Data = StudentServices.GetAll().Where(c => c.IsConfirm == true).ToArray();
    }
    private void HandleCancel(MouseEventArgs e)
    {
        isShow = false;
        isRoom = false;
        Data = StudentServices.GetAll().Where(c => c.IsConfirm == true).ToArray();
    }

    private void Delete(int id)
    {
        StudentServices.Delete(id);
        Data = StudentServices.GetAll().Where(c => c.IsConfirm == true).ToArray();
    }
}